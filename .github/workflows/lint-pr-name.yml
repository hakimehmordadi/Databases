# name: PR Lint

# on:
#     - pull_request

# jobs:
#   pr-lint:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: morrisoncole/pr-lint-action@v1.7.1
#         with:
#           # Note: if you have branch protection rules enabled, the `GITHUB_TOKEN` permissions
#           # won't cover dismissing reviews. Your options are to pass in a custom token
#           # (perhaps by creating some sort of 'service' user and creating a personal access
#           # token with the correct permissions) or to turn off `on-failed-regex-request-changes`
#           # and use action failure to prevent merges instead (with
#           # `on-failed-regex-fail-action: true`). See:
#           # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
#           # https://docs.github.com/en/rest/pulls/reviews#dismiss-a-review-for-a-pull-request
#           repo-token: "${{ secrets.GITHUB_TOKEN }}"
#           title-regex: "#[eE][xX]-[0-9]+"
#           on-failed-regex-fail-action: false
#           on-failed-regex-create-review: true
#           on-failed-regex-request-changes: false
#           on-failed-regex-comment:
#             "This is just an example. Failed regex: `%regex%`!"
#           on-succeeded-regex-dismiss-review-comment:
#             "This is just an example. Success!"

name: Pull Request Title Lint

on:
    - pull_request

jobs:
  lint_title:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check PR Title
        id: check_title
        run: |
          PR_TITLE=$(jq -r '.pull_request.title' $GITHUB_EVENT_PATH)
          if [[ ! "$PR_TITLE" =~ ^[A-Z].*\.$ ]]; then
            echo "Pull request title does not follow the specified format."
            echo "::set-output name=title_valid::false"
          else
            echo "Pull request title follows the specified format."
            echo "::set-output name=title_valid::true"
          fi

      - name: Set PR Status
        if: steps.check_title.outputs.title_valid == 'false'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.repos.createStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'failure',
              description: 'Pull request title does not follow the specified format.',
              context: 'Pull Request Title Lint'
            })
